apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.monish-instinct'

android {
    compileSdkVersion 35
    buildToolsVersion "35.0.0"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 35
        versionCode 1
        versionName "1.0.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    
    // Add packaging options to prevent conflicts
    packagingOptions {
        resources {
            excludes += ['/META-INF/{AL2.0,LGPL2.1}', '/META-INF/DEPENDENCIES', '/META-INF/NOTICE', '/META-INF/LICENSE', '/META-INF/LICENSE.txt', '/META-INF/NOTICE.txt']
        }
    }
}

// Automatically download and include the AAR from GitHub releases
task downloadAAR {
    doLast {
        def aarUrl = 'https://github.com/monish-instinct/AndroidTestEngine/releases/download/v1.0.1/developerenvironment-1.0.0.aar'
        def aarFile = file("${buildDir}/downloads/developerenvironment-1.0.0.aar")
        
        // Create downloads directory if it doesn't exist
        aarFile.parentFile.mkdirs()
        
        // Download AAR if it doesn't exist
        if (!aarFile.exists()) {
            println "Downloading AAR from: ${aarUrl}"
            new URL(aarUrl).withInputStream { i ->
                aarFile.withOutputStream { it << i }
            }
            println "AAR downloaded successfully"
        } else {
            println "AAR already exists, skipping download"
        }
    }
}

// Make sure AAR is downloaded before build
preBuild.dependsOn downloadAAR

// Add the downloaded AAR as a dependency
configurations.maybeCreate("default")
artifacts.add("default", file("${buildDir}/downloads/developerenvironment-1.0.0.aar")) {
    builtBy downloadAAR
}

dependencies {
    // Core Android dependencies
    api 'androidx.core:core-ktx:1.16.0'
    api 'androidx.lifecycle:lifecycle-runtime-ktx:2.9.1'
    api 'androidx.lifecycle:lifecycle-livedata-ktx:2.9.1'
    api 'androidx.appcompat:appcompat:1.7.0'
    api 'androidx.activity:activity-compose:1.10.1'
    
    // Compose BOM and UI
    api platform('androidx.compose:compose-bom:2025.06.00')
    api 'androidx.compose.ui:ui:1.8.2'
    api 'androidx.compose.ui:ui-tooling:1.8.0'
    api 'androidx.constraintlayout:constraintlayout-compose:1.1.1'
    api 'com.google.accompanist:accompanist-systemuicontroller:0.36.0'
    api 'androidx.navigation:navigation-compose:2.7.4'
    api 'androidx.lifecycle:lifecycle-viewmodel-compose:2.9.1'
    api 'androidx.compose.material3:material3:1.1.0'
    api 'androidx.media3:media3-ui:1.3.0'
    api 'androidx.media3:media3-exoplayer:1.3.0'

    // Additional UI components
    api 'androidx.compose.material:material-icons-extended:1.4.0'
    api 'io.coil-kt:coil-compose:2.4.0'
    api 'com.airbnb.android:lottie-compose:6.0.0'
    api 'androidx.sqlite:sqlite-ktx:2.2.0'
    api 'com.squareup.okhttp3:okhttp:4.11.0'
    api 'com.itextpdf:itext7-core:9.2.0'
    api 'org.apache.poi:poi-ooxml:5.2.3'
    api 'org.apache.commons:commons-lang3:3.13.0'
    api 'com.google.code.gson:gson:2.10.1'
    api 'io.reactivex.rxjava3:rxjava:3.1.7'
    api 'io.reactivex.rxjava3:rxandroid:3.0.2'
    api "com.google.accompanist:accompanist-flowlayout:0.30.1"
    api "net.zetetic:android-database-sqlcipher:4.5.4"
    api 'com.razorpay:checkout:1.6.33'

    // Testing dependencies
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2025.06.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.8.0'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.8.0'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.8.0'
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
}
